# This workflow will deploy source code on Cloud Run when a commit is pushed to
# the "main" branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Build (cloudbuild.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Source Developer (roles/run.sourceDeveloper)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources.
#
# 3. Change the values in the "env" block to match your values.

    
name: 'Deploy to Cloud Run from Source'


on: 
  workflow_dispatch:
  release:
    types:
      - 'published'

env:
  PROJECT_ID: 'focus-invention-198214' # TODO: update to your Google Cloud project ID
  REGION: 'eu (multiple regions in European Union)' # TODO: update to your region
  SERVICE: 'storage.googleapis.com' # TODO: update to your service name
  attributeCondition: attribute.repository_owner == 'Nhsrico' # was'Nhsrico'


jobs:
  publish:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'

    steps:
    - id: 'checkout'
      uses: 'actions/checkout@v4'

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:

        project_id: PROJECT_ID
        workload_identity_provider: 'projects/52665217081/locations/global/workloadIdentityPools/github/providers/gltf-models'
        service_account: 'Github-TUDARD1@focus-invention-198214.iam.gserviceaccount.com'
        audience: 'https://github.com/Nhsrico'
        #audience: 'https://github.com/Nhsrico/gltf-models'
        
    - name: Enable Debug Logging
      run: |
        echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV
        
    - name: Debug ID Token
      run: |
          echo "ID Token URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
          echo "ID Token: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
    - name: List Files
      run: |
          ls -alh

    - name: Debug OIDC Token Fetch
      run: |
        echo "ID Token Request URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
        echo "ID Token Request Token: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
        curl -v -sSf \
          -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL"

    - name: Decode OIDC Token
      run: |
        echo "Fetching OIDC token..."
        TOKEN=$(curl -sSf \
          -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL")
        echo "OIDC Token Raw:"
        echo "$TOKEN"
        # Extract the payload (2nd part of the JWT) and decode it
        echo "$TOKEN" | cut -d '.' -f2 | tr '_-' '/+' | base64 -d || echo "Failed to decode the token payload."

    - name: Log OIDC Token
      id: log-token
      run: |
        echo "Fetching OIDC token..."
        curl -sSf \
          -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          $ACTIONS_ID_TOKEN_REQUEST_URL | jq '.' > oidc-token.json
        echo "OIDC Token Claims:"
        cat oidc-token.json

    - id: 'upload-folder'
      uses: 'google-github-actions/upload-cloud-storage@v2'
      with:
        path: './repo'
        destination: 'gs://nhws-cdn'
        #destination: 'https://storage.googleapis.com/nhws-cdn/repo'
        #'gs://nhws-cdn' # Ensure this matches your bucket name and optional path was 'nhws-cdn'


